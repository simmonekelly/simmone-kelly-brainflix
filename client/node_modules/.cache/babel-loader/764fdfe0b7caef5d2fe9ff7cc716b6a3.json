{"ast":null,"code":"var _jsxFileName = \"/Users/simmone/brainstation/simmone-kelly-brainflix-app/src/components/Home-Page/HomePage.js\";\nimport React, { Component } from 'react';\nimport NextVideosData from '../../data/videos.json';\nimport Video from '../2-Video/Video';\nimport BelowVideoSection from '../3-Below-Video/BelowVideoSection';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet apiKey = '2c4911e9-9ba1-4e47-9dc6-1054b805d4c7';\nexport default class HomePage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      VideoData: [],\n      videoId: null,\n      videoComments: []\n    };\n\n    this.getNewId = id => {\n      this.setState({\n        videoId: id\n      });\n    };\n  }\n\n  fetchVideoList() {\n    axios.get('https://project-2-api.herokuapp.com/videos?api_key=' + apiKey).then(results => {\n      let videoData = results.data;\n      this.fetchVideoComments(videoData[0].id);\n      this.setState({\n        VideoData: videoData,\n        videoId: videoData[0].id\n      });\n    });\n  }\n\n  fetchVideoComments(id) {\n    console.log(id);\n    axios.get('https://project-2-api.herokuapp.com/videos/' + id + '?api_key=' + apiKey).then(results => {\n      this.setState({\n        videoComments: results.data.comments\n      });\n    });\n  }\n\n  componentDidMount() {\n    console.log('component did mount');\n    this.fetchVideoList();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('homepage updated'); //console.log(prevProps)\n    //console.log(prevState)\n    //console.log(this.state)\n    //console.log('this.props.match.params.id:' + this.props.match.params.id)\n\n    if (this.props.match.params.id === this.state.videoId) {\n      console.log('id matches');\n    }\n  } //updating for on click\n  //pass id from element\n  //pass id to fetch comments function\n  //fetch video list for next video section\n  //remove id from next video sectin\n\n\n  render() {\n    const currentVideoIndex = this.state.VideoData.findIndex(element => element.id === this.state.videoId); //console.log(this.props)\n\n    console.log('rendering'); //console.log(this.props.match.path)\n\n    console.log(this.state.VideoData);\n\n    if (!this.state.videoId) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        currentVideo: this.state.VideoData[currentVideoIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BelowVideoSection, {\n        currentVideo: this.state.VideoData[currentVideoIndex],\n        videoComments: this.state.videoComments,\n        getNewId: this.getNewId,\n        videosList: this.state.VideoData,\n        routerProps: this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/simmone/brainstation/simmone-kelly-brainflix-app/src/components/Home-Page/HomePage.js"],"names":["React","Component","NextVideosData","Video","BelowVideoSection","axios","apiKey","HomePage","state","VideoData","videoId","videoComments","getNewId","id","setState","fetchVideoList","get","then","results","videoData","data","fetchVideoComments","console","log","comments","componentDidMount","componentDidUpdate","prevProps","prevState","props","match","params","render","currentVideoIndex","findIndex","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NextVideosData from '../../data/videos.json';\nimport Video from '../2-Video/Video';\nimport BelowVideoSection from '../3-Below-Video/BelowVideoSection';\nimport axios from 'axios';\nlet apiKey = '2c4911e9-9ba1-4e47-9dc6-1054b805d4c7'\n\n\nexport default class HomePage extends Component {\n\n    state = {\n        VideoData: [],\n        videoId: null,\n        videoComments:[],\n    };\n\n    fetchVideoList() {\n        axios.get('https://project-2-api.herokuapp.com/videos?api_key=' + apiKey)\n        .then(results => {\n            let videoData = results.data;\n            this.fetchVideoComments(videoData[0].id);\n            this.setState({\n                VideoData: videoData,\n                videoId: videoData[0].id\n\n            })\n            \n        });\n    }\n\n    fetchVideoComments(id) {\n        console.log(id)\n        axios.get('https://project-2-api.herokuapp.com/videos/' + id + '?api_key=' + apiKey)\n        .then(results => {\n            this.setState({\n                videoComments: results.data.comments\n            })\n        })\n    }\n       \n    getNewId = (id) => {\n        this.setState({videoId: id})\n    }\n\n    componentDidMount() {\n        console.log('component did mount');\n        this.fetchVideoList();\n    }\n\n    componentDidUpdate(prevProps, prevState,) {\n        console.log('homepage updated')\n        //console.log(prevProps)\n        //console.log(prevState)\n        //console.log(this.state)\n        //console.log('this.props.match.params.id:' + this.props.match.params.id)\n        if (this.props.match.params.id === this.state.videoId) {\n            console.log('id matches')\n        }\n        \n    }\n\n//updating for on click\n//pass id from element\n//pass id to fetch comments function\n//fetch video list for next video section\n//remove id from next video sectin\n\n    render () {\n\n    const currentVideoIndex = this.state.VideoData.findIndex(element => element.id === this.state.videoId);\n    //console.log(this.props)\n    console.log('rendering')\n    //console.log(this.props.match.path)\n    console.log(this.state.VideoData)\n\n    if (!this.state.videoId) {\n        return null\n    }\n\n    return (\n        <div>\n            <Video currentVideo={this.state.VideoData[currentVideoIndex]} />\n            <BelowVideoSection\n                currentVideo={this.state.VideoData[currentVideoIndex]}\n                videoComments={this.state.videoComments}\n                getNewId={this.getNewId}\n                videosList={this.state.VideoData}\n                routerProps={this.props} />\n        </div>\n    )\n}\n}\n\n"]},"metadata":{},"sourceType":"module"}