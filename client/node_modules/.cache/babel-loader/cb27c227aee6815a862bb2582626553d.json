{"ast":null,"code":"var _jsxFileName = \"/Users/simmone/brainstation/simmone-kelly-brainflix-app/src/components/Home-Page/HomePage.js\";\nimport React, { Component } from 'react';\nimport VideoData from '../../data/video-details.json';\nimport NextVideosData from '../../data/videos.json';\nimport Video from '../2-Video/Video';\nimport BelowVideoSection from '../3-Below-Video/BelowVideoSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class HomePage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      VideoData: VideoData,\n      videoId: null //VideoData[0].id\n\n    };\n\n    this.getNewId = id => {\n      this.setState({\n        videoId: id\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log('component did mount');\n    this.setState({\n      VideoData: VideoData,\n      videoId: VideoData[0].id\n    });\n  } // componentDidUpdate()  is for when state gets updated\n  // componentWillUnmount()  still a little lost with this one\n\n\n  render() {\n    const currentVideoIndex = VideoData.findIndex(element => element.id === this.state.videoId);\n    console.log(this.props);\n    console.log('rendering'); //console.log(this.props.match.path)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.videoId && /*#__PURE__*/_jsxDEV(Video, {\n        currentVideo: VideoData[currentVideoIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 36\n      }, this), this.state.videoId && /*#__PURE__*/_jsxDEV(BelowVideoSection, {\n        currentVideo: VideoData[currentVideoIndex],\n        getNewId: this.getNewId,\n        nextVideosList: NextVideosData,\n        routerProps: this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/simmone/brainstation/simmone-kelly-brainflix-app/src/components/Home-Page/HomePage.js"],"names":["React","Component","VideoData","NextVideosData","Video","BelowVideoSection","HomePage","state","videoId","getNewId","id","setState","componentDidMount","console","log","render","currentVideoIndex","findIndex","element","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;;AAGA,eAAe,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE5CM,KAF4C,GAEpC;AACJL,MAAAA,SAAS,EAAEA,SADP;AAEJM,MAAAA,OAAO,EAAE,IAFL,CAGJ;;AAHI,KAFoC;;AAAA,SAQ5CC,QAR4C,GAQhCC,EAAD,IAAQ;AACf,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAEE;AAAV,OAAd;AACH,KAV2C;AAAA;;AAY5CE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAKH,QAAL,CAAc;AACVT,MAAAA,SAAS,EAAEA,SADD;AAEVM,MAAAA,OAAO,EAAEN,SAAS,CAAC,CAAD,CAAT,CAAaQ;AAFZ,KAAd;AAIH,GAlB2C,CAmBhD;AACA;;;AAEIK,EAAAA,MAAM,GAAI;AAEV,UAAMC,iBAAiB,GAAGd,SAAS,CAACe,SAAV,CAAoBC,OAAO,IAAIA,OAAO,CAACR,EAAR,KAAe,KAAKH,KAAL,CAAWC,OAAzD,CAA1B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAjB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAJU,CAKV;;AAEA,wBACI;AAAA,iBACK,KAAKP,KAAL,CAAWC,OAAX,iBAAsB,QAAC,KAAD;AAAO,QAAA,YAAY,EAAEN,SAAS,CAACc,iBAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,cAD3B,EAEK,KAAKT,KAAL,CAAWC,OAAX,iBAAsB,QAAC,iBAAD;AACnB,QAAA,YAAY,EAAEN,SAAS,CAACc,iBAAD,CADJ;AAEnB,QAAA,QAAQ,EAAE,KAAKP,QAFI;AAGnB,QAAA,cAAc,EAAEN,cAHG;AAInB,QAAA,WAAW,EAAE,KAAKgB;AAJC;AAAA;AAAA;AAAA;AAAA,cAF3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAvC+C","sourcesContent":["import React, { Component } from 'react';\nimport VideoData from '../../data/video-details.json';\nimport NextVideosData from '../../data/videos.json';\nimport Video from '../2-Video/Video';\nimport BelowVideoSection from '../3-Below-Video/BelowVideoSection';\n\n\nexport default class HomePage extends Component {\n\n    state = {\n        VideoData: VideoData,\n        videoId: null\n        //VideoData[0].id\n    };\n       \n    getNewId = (id) => {\n        this.setState({videoId: id})\n    }\n\n    componentDidMount() {\n        console.log('component did mount')\n        this.setState({\n            VideoData: VideoData,\n            videoId: VideoData[0].id,\n        })\n    }\n// componentDidUpdate()  is for when state gets updated\n// componentWillUnmount()  still a little lost with this one\n\n    render () {\n\n    const currentVideoIndex = VideoData.findIndex(element => element.id === this.state.videoId);\n    console.log(this.props)\n    console.log('rendering')\n    //console.log(this.props.match.path)\n\n    return (\n        <div>\n            {this.state.videoId && <Video currentVideo={VideoData[currentVideoIndex]} /> }\n            {this.state.videoId && <BelowVideoSection\n                currentVideo={VideoData[currentVideoIndex]}\n                getNewId={this.getNewId}\n                nextVideosList={NextVideosData}\n                routerProps={this.props} /> }\n        </div>\n    )\n}\n}\n\n"]},"metadata":{},"sourceType":"module"}