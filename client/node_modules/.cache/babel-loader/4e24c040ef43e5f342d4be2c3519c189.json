{"ast":null,"code":"var _jsxFileName = \"/Users/simmone/brainstation/simmone-kelly-brainflix-app/src/components/3-Below-Video/2-Comments-Section/CommentsSection.js\";\nimport React, { Component } from 'react';\nimport PostedComments from './PostedComments';\nimport './comment-section.scss';\nimport CommentsForm from './CommentsForm';\nimport avatar from '../../../assets/images/Mohan-muruge.jpg';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CommentsSection extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      videoComments: []\n    };\n  }\n\n  fetchVideoComments(id) {\n    axios.get('https://project-2-api.herokuapp.com/videos/' + id + '?api_key=' + this.props.apiKey).then(results => {\n      this.setState({\n        videoComments: results.data.comments\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchVideoComments(this.props.currentVideo);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log('comments did update');\n    // console.log(prevProps)\n    // console.log('previous video: ' + prevProps.currentVideo)\n    // console.log('previous router: ' + prevProps.routerProps.match.params.id)\n    // console.log('current id: ' + this.props.routerProps.match.params.id)\n    //console.log(prevState)\n    //console.log('currentvideo prop: ' + this.props.currentVideo)\n    //console.log('currentmatch prop: ' + this.props.routerProps.match.params.id)\n    //console.log('prevProp: ' + prevProps.currentVideo);\n    if (this.props.routerProps.match.params.id) {\n      const videoId = this.props.routerProps.match.params.id; //console.log('about to check ids');\n\n      if (prevProps.currentVideo !== videoId) {\n        this.fetchVideoComments(videoId);\n      }\n    } else if (prevProps.currentVideo && prevProps.routerProps.match.params.id && !this.props.routerProps.match.params.id) {\n      console.log('reset to main video');\n      this.fetchVideoComments('84e96018-4022-434e-80bf-000ce4cd12b8');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"comment-total\",\n        children: [this.state.videoComments.length, \" Comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CommentsForm, {\n        formAvatar: avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), this.state.videoComments.map((element, index) => /*#__PURE__*/_jsxDEV(PostedComments, {\n        videoComments: element\n      }, 'comments' + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/simmone/brainstation/simmone-kelly-brainflix-app/src/components/3-Below-Video/2-Comments-Section/CommentsSection.js"],"names":["React","Component","PostedComments","CommentsForm","avatar","axios","CommentsSection","state","videoComments","fetchVideoComments","id","get","props","apiKey","then","results","setState","data","comments","componentDidMount","currentVideo","componentDidUpdate","prevProps","prevState","routerProps","match","params","videoId","console","log","render","length","map","element","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,wBAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACnDM,KADmD,GAC3C;AACJC,MAAAA,aAAa,EAAE;AADX,KAD2C;AAAA;;AAKnDC,EAAAA,kBAAkB,CAACC,EAAD,EAAK;AACnBL,IAAAA,KAAK,CAACM,GAAN,CAAU,gDAAgDD,EAAhD,GAAqD,WAArD,GAAmE,KAAKE,KAAL,CAAWC,MAAxF,EACCC,IADD,CACMC,OAAO,IAAI;AACb,WAAKC,QAAL,CAAc;AACVR,QAAAA,aAAa,EAAEO,OAAO,CAACE,IAAR,CAAaC;AADlB,OAAd;AAGH,KALD;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,kBAAL,CAAwB,KAAKG,KAAL,CAAWQ,YAAnC;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAG,KAAKX,KAAL,CAAWY,WAAX,CAAuBC,KAAvB,CAA6BC,MAA7B,CAAoChB,EAAvC,EAA2C;AACvC,YAAMiB,OAAO,GAAG,KAAKf,KAAL,CAAWY,WAAX,CAAuBC,KAAvB,CAA6BC,MAA7B,CAAoChB,EAApD,CADuC,CAEvC;;AACA,UAAIY,SAAS,CAACF,YAAV,KAA2BO,OAA/B,EAAwC;AACpC,aAAKlB,kBAAL,CAAwBkB,OAAxB;AACH;AAEJ,KAPD,MAOM,IAAIL,SAAS,CAACF,YAAV,IAA0BE,SAAS,CAACE,WAAV,CAAsBC,KAAtB,CAA4BC,MAA5B,CAAmChB,EAA7D,IAAmE,CAAC,KAAKE,KAAL,CAAWY,WAAX,CAAuBC,KAAvB,CAA6BC,MAA7B,CAAoChB,EAA5G,EAA+G;AACjHkB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,WAAKpB,kBAAL,CAAwB,sCAAxB;AACH;AACJ;;AAEDqB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAS,MAAA,SAAS,EAAC,UAAnB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,mBACK,KAAKvB,KAAL,CAAWC,aAAX,CAAyBuB,MAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,YAAD;AAAc,QAAA,UAAU,EAAE3B;AAA1B;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKK,KAAKG,KAAL,CAAWC,aAAX,CAAyBwB,GAAzB,CAA6B,CAACC,OAAD,EAAUC,KAAV,kBAC1B,QAAC,cAAD;AAAgB,QAAA,aAAa,EAAED;AAA/B,SAA6C,aAAaC,KAA1D;AAAA;AAAA;AAAA;AAAA,cADH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AArDkD","sourcesContent":["import React, { Component } from 'react';\nimport PostedComments from './PostedComments';\nimport './comment-section.scss';\nimport CommentsForm from './CommentsForm';\nimport avatar from '../../../assets/images/Mohan-muruge.jpg';\nimport axios from 'axios';\n\nexport default class CommentsSection extends Component {\n    state = {\n        videoComments: []\n    }\n\n    fetchVideoComments(id) {\n        axios.get('https://project-2-api.herokuapp.com/videos/' + id + '?api_key=' + this.props.apiKey)\n        .then(results => {\n            this.setState({\n                videoComments: results.data.comments\n            })\n        })\n    }\n\n    componentDidMount() {\n        this.fetchVideoComments(this.props.currentVideo)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // console.log('comments did update');\n        // console.log(prevProps)\n        // console.log('previous video: ' + prevProps.currentVideo)\n        // console.log('previous router: ' + prevProps.routerProps.match.params.id)\n        // console.log('current id: ' + this.props.routerProps.match.params.id)\n        //console.log(prevState)\n        //console.log('currentvideo prop: ' + this.props.currentVideo)\n        //console.log('currentmatch prop: ' + this.props.routerProps.match.params.id)\n        //console.log('prevProp: ' + prevProps.currentVideo);\n        if(this.props.routerProps.match.params.id) {\n            const videoId = this.props.routerProps.match.params.id;\n            //console.log('about to check ids');\n            if (prevProps.currentVideo !== videoId) {\n                this.fetchVideoComments(videoId);\n            }\n        \n        }else if (prevProps.currentVideo && prevProps.routerProps.match.params.id && !this.props.routerProps.match.params.id){\n            console.log('reset to main video')\n            this.fetchVideoComments('84e96018-4022-434e-80bf-000ce4cd12b8')\n        }\n    }\n\n    render(){\n        return(\n            <section className=\"comments\">\n                <h3 className=\"comment-total\">\n                    {this.state.videoComments.length} Comments\n                </h3>\n                <CommentsForm formAvatar={avatar}/>\n                {this.state.videoComments.map((element, index) =>\n                    <PostedComments videoComments={element} key={'comments' + index} />)}\n            </section>\n        )\n\n    }\n}"]},"metadata":{},"sourceType":"module"}