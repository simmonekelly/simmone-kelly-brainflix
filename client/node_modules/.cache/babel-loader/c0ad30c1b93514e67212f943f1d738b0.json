{"ast":null,"code":"var _jsxFileName = \"/Users/simmone/brainstation/simmone-kelly-brainflix-app/src/components/Home-Page/HomePage.js\";\nimport React, { Component } from 'react';\nimport Video from '../2-Video/Video';\nimport BelowVideoSection from '../3-Below-Video/BelowVideoSection';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet apiKey = '2c4911e9-9ba1-4e47-9dc6-1054b805d4c7';\nexport default class HomePage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      VideoData: [],\n      videoId: null,\n      comments: [],\n      title: null,\n      description: null,\n      channel: null,\n      likes: null,\n      views: null,\n      date: null\n    };\n\n    this.getNewId = id => {\n      this.setState({\n        videoId: id\n      });\n    };\n  }\n\n  // gets full video list\n  fetchVideoList() {\n    axios.get('https://project-2-api.herokuapp.com/videos?api_key=' + apiKey).then(results => {\n      let videoData = results.data;\n      this.setState({\n        VideoData: videoData,\n        videoId: videoData[0].id\n      });\n    });\n  } // onclick event listener to get clicked element id\n\n\n  //sets initial state\n  componentDidMount() {\n    console.log('homepage did mount');\n    this.fetchVideoList();\n  } // calls video info from axios\n\n\n  fetchVideoInfo(id) {\n    axios.get('https://project-2-api.herokuapp.com/videos/' + id + '?api_key=' + apiKey).then(results => {\n      console.log('fetched video info');\n      const videoInfo = results.data;\n      this.setState({\n        comments: videoInfo.comments,\n        title: videoInfo.title,\n        description: videoInfo.description,\n        channel: videoInfo.channel,\n        likes: videoInfo.likes,\n        views: videoInfo.views,\n        date: videoInfo.timestamp\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('homepage updated');\n    console.log(this.state.videoId);\n\n    if (this.state.videoId !== prevState.videoId) {\n      this.fetchVideoInfo(this.state.videoId);\n    }\n\n    console.log(this.state.comments);\n    console.log(prevState); //doesnt match this\n\n    console.log(prevProps);\n    console.log('this.props.match.params.id:' + this.props.match.params.id);\n\n    if (this.props.match.params.id) {\n      const videoId = this.props.match.params.id;\n      console.log('home page id: ' + videoId);\n      console.log('about to check ids hp');\n\n      if (prevState.videoId !== videoId) {\n        this.setState({\n          videoId: videoId\n        });\n      }\n    } else if (!this.props.match.params.id && prevProps.match.params.id) {\n      //current id is not defined and previous id is not defined\n      this.setState({\n        videoId: '84e96018-4022-434e-80bf-000ce4cd12b8'\n      });\n    } //run a check for undefined match.param and prev state for home page\n\n  }\n\n  render() {\n    const currentVideoIndex = this.state.VideoData.findIndex(element => element.id === this.state.videoId);\n\n    if (!this.state.videoId) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        currentVideo: this.state.VideoData[currentVideoIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BelowVideoSection, {\n        currentVideo: this.state.VideoData[currentVideoIndex],\n        getNewId: this.getNewId,\n        videosList: this.state.VideoData,\n        routerProps: this.props,\n        apiKey: apiKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/simmone/brainstation/simmone-kelly-brainflix-app/src/components/Home-Page/HomePage.js"],"names":["React","Component","Video","BelowVideoSection","axios","apiKey","HomePage","state","VideoData","videoId","comments","title","description","channel","likes","views","date","getNewId","id","setState","fetchVideoList","get","then","results","videoData","data","componentDidMount","console","log","fetchVideoInfo","videoInfo","timestamp","componentDidUpdate","prevProps","prevState","props","match","params","render","currentVideoIndex","findIndex","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Video from '../2-Video/Video';\nimport BelowVideoSection from '../3-Below-Video/BelowVideoSection';\nimport axios from 'axios';\nlet apiKey = '2c4911e9-9ba1-4e47-9dc6-1054b805d4c7'\n\n\nexport default class HomePage extends Component {\n\n    state = {\n        VideoData: [],\n        videoId: null,\n        comments: [],\n        title: null,\n        description: null,\n        channel: null,\n        likes: null,\n        views: null,\n        date: null,\n    };\n\n    // gets full video list\n    fetchVideoList() {\n        axios.get('https://project-2-api.herokuapp.com/videos?api_key=' + apiKey)\n        .then(results => {\n            let videoData = results.data;\n            this.setState({\n                VideoData: videoData,\n                videoId: videoData[0].id,\n            })\n        });\n    }\n  \n    // onclick event listener to get clicked element id\n    getNewId = (id) => {\n        this.setState({videoId: id});\n    }\n\n    //sets initial state\n    componentDidMount() {\n        console.log('homepage did mount');\n        this.fetchVideoList();\n    }\n\n    // calls video info from axios\n    fetchVideoInfo(id) {\n        axios.get('https://project-2-api.herokuapp.com/videos/' + id + '?api_key=' + apiKey)\n        .then(results => {\n            console.log('fetched video info')\n            const videoInfo = results.data;\n            this.setState({\n                comments: videoInfo.comments,\n                title: videoInfo.title,\n                description: videoInfo.description,\n                channel: videoInfo.channel,\n                likes: videoInfo.likes,\n                views: videoInfo.views,\n                date: videoInfo.timestamp,\n            })\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log('homepage updated');\n        console.log(this.state.videoId)\n        if (this.state.videoId !== prevState.videoId) {\n            this.fetchVideoInfo(this.state.videoId)\n        }\n        console.log(this.state.comments)\n        console.log(prevState); //doesnt match this\n        console.log(prevProps)\n        console.log('this.props.match.params.id:' + this.props.match.params.id);\n        if(this.props.match.params.id) {\n            const videoId = this.props.match.params.id;\n            console.log('home page id: ' + videoId);\n            console.log('about to check ids hp')\n            if (prevState.videoId !== videoId) {\n                this.setState({videoId: videoId})\n            }\n        } else if (!this.props.match.params.id && prevProps.match.params.id){\n            //current id is not defined and previous id is not defined\n            this.setState({\n                videoId: '84e96018-4022-434e-80bf-000ce4cd12b8',\n            })\n        }\n        //run a check for undefined match.param and prev state for home page\n        \n    }\n\n    render () {\n\n    const currentVideoIndex = this.state.VideoData.findIndex(element => element.id === this.state.videoId);\n\n    if (!this.state.videoId) {\n        return null\n    }\n\n    return (\n        <div>\n            <Video currentVideo={this.state.VideoData[currentVideoIndex]} />\n            <BelowVideoSection\n                currentVideo={this.state.VideoData[currentVideoIndex]}\n                getNewId={this.getNewId}\n                videosList={this.state.VideoData}\n                routerProps={this.props} \n                apiKey={apiKey}/>\n        </div>\n    )\n}\n}\n\n"]},"metadata":{},"sourceType":"module"}