{"ast":null,"code":"var _jsxFileName = \"/Users/simmone/brainstation/simmone-kelly-brainflix-app/src/components/Home-Page/HomePage.js\";\nimport React, { Component } from 'react'; //import VideoData from '../../data/video-details.json';\n\nimport NextVideosData from '../../data/videos.json';\nimport Video from '../2-Video/Video';\nimport BelowVideoSection from '../3-Below-Video/BelowVideoSection';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet apiKey = '2c4911e9-9ba1-4e47-9dc6-1054b805d4c7';\nexport default class HomePage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      VideoData: [],\n      videoId: null //VideoData[0].id\n\n    };\n\n    this.getNewId = id => {\n      this.setState({\n        videoId: id\n      });\n    };\n  }\n\n  fetchApi() {\n    axios.get('https://project-2-api.herokuapp.com/videos?api_key=' + apiKey).then(results => {\n      console.log(results.data);\n      this.setState({\n        VideoData: results.data\n      });\n    });\n  }\n\n  componentDidMount() {\n    console.log('component did mount');\n    this.fetchApi();\n    this.setState({\n      // VideoData: VideoData,\n      videoId: VideoData[0].id\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //console.log('homepage updated')\n    //console.log(prevProps)\n    //console.log(prevState)\n    //console.log(this.state)\n    //console.log('this.props.match.params.id:' + this.props.match.params.id)\n    if (this.props.match.params.id === this.state.videoId) {\n      console.log('id matches');\n    }\n  } // componentDidUpdate()  is for when state gets updated\n  // componentWillUnmount()  still a little lost with this one\n\n\n  render() {\n    const currentVideoIndex = VideoData.findIndex(element => element.id === this.state.videoId); //console.log(this.props)\n    //console.log('rendering')\n    //console.log(this.props.match.path)\n\n    console.log(VideoData);\n\n    if (!this.state.videoId) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        currentVideo: VideoData[currentVideoIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BelowVideoSection, {\n        currentVideo: VideoData[currentVideoIndex],\n        getNewId: this.getNewId,\n        nextVideosList: NextVideosData,\n        routerProps: this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/simmone/brainstation/simmone-kelly-brainflix-app/src/components/Home-Page/HomePage.js"],"names":["React","Component","NextVideosData","Video","BelowVideoSection","axios","apiKey","HomePage","state","VideoData","videoId","getNewId","id","setState","fetchApi","get","then","results","console","log","data","componentDidMount","componentDidUpdate","prevProps","prevState","props","match","params","render","currentVideoIndex","findIndex","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAIC,MAAM,GAAG,sCAAb;AAGA,eAAe,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE5CO,KAF4C,GAEpC;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,OAAO,EAAE,IAFL,CAGJ;;AAHI,KAFoC;;AAAA,SAgB5CC,QAhB4C,GAgBhCC,EAAD,IAAQ;AACf,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAEE;AAAV,OAAd;AACH,KAlB2C;AAAA;;AAQ5CE,EAAAA,QAAQ,GAAG;AACPT,IAAAA,KAAK,CAACU,GAAN,CAAU,wDAAwDT,MAAlE,EACCU,IADD,CACMC,OAAO,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,IAApB;AACA,WAAKP,QAAL,CAAc;AAACJ,QAAAA,SAAS,EAAEQ,OAAO,CAACG;AAApB,OAAd;AACH,KAJD;AAKD;;AAMHC,EAAAA,iBAAiB,GAAG;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAKL,QAAL;AACA,SAAKD,QAAL,CAAc;AACV;AACAH,MAAAA,OAAO,EAAED,SAAS,CAAC,CAAD,CAAT,CAAaG;AAFZ,KAAd;AAIH;;AAEDU,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAwB;AACtC;AACA;AACA;AACA;AACA;AACA,QAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBf,EAAxB,KAA+B,KAAKJ,KAAL,CAAWE,OAA9C,EAAuD;AACnDQ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;AAEJ,GAvC2C,CAyChD;AACA;;;AAEIS,EAAAA,MAAM,GAAI;AAEV,UAAMC,iBAAiB,GAAGpB,SAAS,CAACqB,SAAV,CAAoBC,OAAO,IAAIA,OAAO,CAACnB,EAAR,KAAe,KAAKJ,KAAL,CAAWE,OAAzD,CAA1B,CAFU,CAGV;AACA;AACA;;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;;AAEA,QAAI,CAAC,KAAKD,KAAL,CAAWE,OAAhB,EAAyB;AACrB,aAAO,IAAP;AACH;;AAED,wBACI;AAAA,8BAEI,QAAC,KAAD;AAAO,QAAA,YAAY,EAAED,SAAS,CAACoB,iBAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII,QAAC,iBAAD;AACI,QAAA,YAAY,EAAEpB,SAAS,CAACoB,iBAAD,CAD3B;AAEI,QAAA,QAAQ,EAAE,KAAKlB,QAFnB;AAGI,QAAA,cAAc,EAAET,cAHpB;AAII,QAAA,WAAW,EAAE,KAAKuB;AAJtB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AApE+C","sourcesContent":["import React, { Component } from 'react';\n//import VideoData from '../../data/video-details.json';\nimport NextVideosData from '../../data/videos.json';\nimport Video from '../2-Video/Video';\nimport BelowVideoSection from '../3-Below-Video/BelowVideoSection';\nimport axios from 'axios';\nlet apiKey = '2c4911e9-9ba1-4e47-9dc6-1054b805d4c7'\n\n\nexport default class HomePage extends Component {\n\n    state = {\n        VideoData: [],\n        videoId: null\n        //VideoData[0].id\n    };\n\n    fetchApi() {\n        axios.get('https://project-2-api.herokuapp.com/videos?api_key=' + apiKey)\n        .then(results => {\n            console.log(results.data)\n            this.setState({VideoData: results.data})\n        });\n      }\n       \n    getNewId = (id) => {\n        this.setState({videoId: id})\n    }\n\n    componentDidMount() {\n        console.log('component did mount');\n        this.fetchApi();\n        this.setState({\n            // VideoData: VideoData,\n            videoId: VideoData[0].id,\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState,) {\n        //console.log('homepage updated')\n        //console.log(prevProps)\n        //console.log(prevState)\n        //console.log(this.state)\n        //console.log('this.props.match.params.id:' + this.props.match.params.id)\n        if (this.props.match.params.id === this.state.videoId) {\n            console.log('id matches')\n        }\n        \n    }\n\n// componentDidUpdate()  is for when state gets updated\n// componentWillUnmount()  still a little lost with this one\n\n    render () {\n\n    const currentVideoIndex = VideoData.findIndex(element => element.id === this.state.videoId);\n    //console.log(this.props)\n    //console.log('rendering')\n    //console.log(this.props.match.path)\n    console.log(VideoData)\n\n    if (!this.state.videoId) {\n        return null\n    }\n\n    return (\n        <div>\n            {/* {this.state.videoId && */}\n            <Video currentVideo={VideoData[currentVideoIndex]} />\n            {/* {this.state.videoId && */}\n            <BelowVideoSection\n                currentVideo={VideoData[currentVideoIndex]}\n                getNewId={this.getNewId}\n                nextVideosList={NextVideosData}\n                routerProps={this.props} />\n        </div>\n    )\n}\n}\n\n"]},"metadata":{},"sourceType":"module"}