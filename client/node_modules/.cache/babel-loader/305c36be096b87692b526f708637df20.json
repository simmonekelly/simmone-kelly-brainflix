{"ast":null,"code":"var _jsxFileName = \"/Users/simmone/brainstation/simmone-kelly-brainflix-app/client/src/components/Home-Page/HomePage.js\";\nimport React, { Component } from 'react';\nimport Video from '../2-Video/Video';\nimport BelowVideoSection from '../3-Below-Video/BelowVideoSection';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet apiKey = '2c4911e9-9ba1-4e47-9dc6-1054b805d4c7';\nexport default class HomePage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      VideoData: [],\n      videoId: null,\n      videoInfo: [],\n      newComment: \"\"\n    };\n\n    this.getNewId = id => {\n      this.setState({\n        videoId: id\n      });\n    };\n\n    this.handleCommentInputChange = text => {\n      this.setState({\n        newComment: text\n      });\n    };\n\n    this.addComment = e => {\n      e.preventDefault();\n      axios.post('http://localhost:8080/videos/' + this.state.videoId + '/comments?api_key=' + apiKey, {\n        comment: this.state.newComment\n      }).then(data => {\n        this.setState({\n          videoInfo: data.data\n        });\n      }); // this.commentsform.reset();\n    };\n\n    this.deleteComment = (commentId, videoId) => {\n      axios.delete('http://localhost:8080/videos/' + videoId + '/comments/' + commentId + '?api_key=' + apiKey).then(data => {\n        this.setState({\n          VideoData: data.data //needs to push refresh, cant refresh with if statement\n\n        });\n      });\n    };\n  }\n\n  //sets initial state\n  componentDidMount() {\n    this.fetchVideoList();\n  } // gets full video list\n\n\n  fetchVideoList() {\n    axios.get('http://localhost:8080/videos?api_key=' + apiKey).then(results => {\n      let videoData = results.data;\n      this.setState({\n        VideoData: videoData,\n        videoId: videoData[0].id\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  } // onclick event listener to get clicked element id\n\n\n  // calls to get video info from axios\n  fetchVideoInfo(id) {\n    axios.get('http://localhost:8080/videos/' + id + '?api_key=' + apiKey).then(results => {\n      const videoInfo = results.data;\n      this.setState({\n        videoInfo: videoInfo\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('updated'); //|| (this.state.videoInfo !== prevState.videoInfo)\n\n    console.log(this.state.videoInfo.comments); //checks if current state matches previous state to fetch video info\n\n    if (this.state.videoId !== prevState.videoId) {\n      console.log('fetched video info');\n      this.fetchVideoInfo(this.state.videoId);\n    } //checks to see if id is available\n\n\n    if (this.props.match.params.id) {\n      console.log('is id available');\n      const videoId = this.props.match.params.id; //checks to see if id param matches previous state id to then set state\n\n      if (prevState.videoId !== videoId) {\n        console.log('set new video id');\n        this.setState({\n          videoId: videoId\n        });\n      }\n    } else if (!this.props.match.params.id && prevProps.match.params.id) {\n      this.setState({\n        videoId: this.state.VideoData[0].id\n      });\n    }\n  } //manages comment state change\n\n\n  render() {\n    const currentVideoIndex = this.state.VideoData.findIndex(element => element.id === this.state.videoId);\n\n    if (!this.state.videoId) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        currentVideo: this.state.VideoData[currentVideoIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BelowVideoSection, {\n        currentVideo: this.state.VideoData[currentVideoIndex],\n        getNewId: this.getNewId,\n        videosList: this.state.VideoData,\n        routerProps: this.props,\n        videoInfo: this.state.videoInfo,\n        commentHandler: this.addComment,\n        deleteComment: this.deleteComment,\n        handleCommentInputChange: this.handleCommentInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/simmone/brainstation/simmone-kelly-brainflix-app/client/src/components/Home-Page/HomePage.js"],"names":["React","Component","Video","BelowVideoSection","axios","apiKey","HomePage","state","VideoData","videoId","videoInfo","newComment","getNewId","id","setState","handleCommentInputChange","text","addComment","e","preventDefault","post","comment","then","data","deleteComment","commentId","delete","componentDidMount","fetchVideoList","get","results","videoData","catch","error","console","log","fetchVideoInfo","componentDidUpdate","prevProps","prevState","comments","props","match","params","render","currentVideoIndex","findIndex","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Video from '../2-Video/Video';\nimport BelowVideoSection from '../3-Below-Video/BelowVideoSection';\nimport axios from 'axios';\nlet apiKey = '2c4911e9-9ba1-4e47-9dc6-1054b805d4c7'\n\n\nexport default class HomePage extends Component {\n\n    state = {\n        VideoData: [],\n        videoId: null,\n        videoInfo: [],\n        newComment: \"\",\n    };\n\n    //sets initial state\n    componentDidMount() {\n        this.fetchVideoList();\n    }\n\n    // gets full video list\n    fetchVideoList() {\n        axios.get('http://localhost:8080/videos?api_key=' + apiKey)\n        .then(results => {\n            let videoData = results.data;\n            this.setState({\n                VideoData: videoData,\n                videoId: videoData[0].id,\n            })\n        })\n        .catch(error => {\n            console.log(error)\n        });\n    }\n  \n    // onclick event listener to get clicked element id\n    getNewId = (id) => {\n        this.setState({videoId: id});\n    }\n\n    // calls to get video info from axios\n    fetchVideoInfo(id) {\n        axios.get('http://localhost:8080/videos/' + id + '?api_key=' + apiKey)\n        .then(results => {\n            const videoInfo = results.data;\n            this.setState({\n                videoInfo: videoInfo,\n            })\n        })\n        .catch(error => {\n            console.log(error)\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log('updated')\n        //|| (this.state.videoInfo !== prevState.videoInfo)\n\n        console.log(this.state.videoInfo.comments)\n        \n        //checks if current state matches previous state to fetch video info\n        if (this.state.videoId !== prevState.videoId) {\n            console.log('fetched video info')\n            this.fetchVideoInfo(this.state.videoId);\n        }\n        \n        //checks to see if id is available\n        if(this.props.match.params.id) {\n            console.log('is id available')\n            const videoId = this.props.match.params.id;\n            \n            //checks to see if id param matches previous state id to then set state\n            if (prevState.videoId !== videoId) {\n                console.log('set new video id')\n                this.setState({videoId: videoId})\n            }\n        } else if (!this.props.match.params.id && prevProps.match.params.id){\n            this.setState({\n                videoId: this.state.VideoData[0].id,\n            })\n        }\n        \n    }\n\n    //manages comment state change\n    handleCommentInputChange = (text) => {\n        this.setState({\n            newComment: text,\n        })\n    }\n\n    //comment form submisison\n    addComment = (e) => {\n        e.preventDefault();\n        \n        axios.post('http://localhost:8080/videos/' + this.state.videoId + '/comments?api_key=' + apiKey, {\n            comment: this.state.newComment,\n          })\n        .then(data => {\n          this.setState({\n            videoInfo: data.data,\n          })\n        });\n        // this.commentsform.reset();\n    };\n\n    deleteComment = (commentId, videoId) => {\n\n        axios.delete('http://localhost:8080/videos/' + videoId + '/comments/' + commentId + '?api_key=' + apiKey)\n        .then(data => {\n            this.setState({\n                VideoData: data.data, //needs to push refresh, cant refresh with if statement\n            })\n        });\n    };\n\n\n    render () {\n\n    const currentVideoIndex = this.state.VideoData.findIndex(element => element.id === this.state.videoId);\n\n    if (!this.state.videoId) {\n        return null\n    }\n\n    return (\n        <div>\n            <Video currentVideo={this.state.VideoData[currentVideoIndex]} />\n            <BelowVideoSection\n                currentVideo={this.state.VideoData[currentVideoIndex]}\n                getNewId={this.getNewId}\n                videosList={this.state.VideoData}\n                routerProps={this.props}\n                videoInfo={this.state.videoInfo}\n                commentHandler={this.addComment}\n                deleteComment={this.deleteComment}\n                handleCommentInputChange={this.handleCommentInputChange} />\n        </div>\n    )}\n}\n\n"]},"metadata":{},"sourceType":"module"}